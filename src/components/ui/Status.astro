---
import { capitalize } from "@util/parser/capitalize";
import Tooltip from "./Tooltip.astro";
import type { HTMLAttributes } from "astro/types";

/** Filled status icon */
interface Props extends Omit<HTMLAttributes<"div">, "slot"> {
  /** Status type without "typing" & "screen-sharing" */
  type: Status;
}

const { type, class: additionalClass, ...props } = Astro.props;

// Could use tooltipLabels approach as with everything else, CBA
const parseStatus = (status: Status): string =>
  capitalize(
    status
      .replace("mobile", "")
      .replace("-", " ")
      .trim()
  );

const tooltip = parseStatus(type);
---

<Tooltip label={tooltip} class={additionalClass} {...props}>
  <img src={`/status/filled/${type}.svg`} alt={tooltip} class="status" />
</Tooltip>
<style lang="sass">
  @use "src/styles/utils/conversion" as *
  @use "src/styles/theme/colors"
  @use "src/styles/theme/space"

  .status
    width: rem(40)
</style>
